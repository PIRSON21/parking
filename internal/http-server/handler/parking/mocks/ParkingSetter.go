// Code generated by mockery v2.53.0. DO NOT EDIT.

package mocks

import (
	models "github.com/PIRSON21/parking/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// ParkingSetter is an autogenerated mock type for the ParkingSetter type
type ParkingSetter struct {
	mock.Mock
}

// AddParking provides a mock function with given fields: _a0
func (_m *ParkingSetter) AddParking(_a0 *models.Parking) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for AddParking")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Parking) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewParkingSetter creates a new instance of ParkingSetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewParkingSetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *ParkingSetter {
	mock := &ParkingSetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
